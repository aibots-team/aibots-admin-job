syntax = "proto3";

package job;
option go_package="./job";

message TaskListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  string name = 3;
  string task_group = 4;
}

message TaskLogInfo {
  uint64 id = 1;
  int64 started_at = 2;
  int64 finished_at = 3;
  uint32 result = 4;
}

//  base message
message Empty {}

message IDsReq {
  repeated uint64 ids = 1;
}

message BaseResp {
  string msg = 1;
}

message BaseIDResp {
  uint64 id = 1;
  string msg = 2;
}

message TaskInfo {
  uint64 id = 1;
  int64 created_at = 2;
  int64 updated_at = 3;
  uint32 status = 4;
  string name = 5;
  string task_group = 6;
  string cron_expression = 7;
  string pattern = 8;
  string payload = 9;
}

message UUIDReq {
  string id = 1;
}

message PageInfoReq {
  uint64 page = 1;
  uint64 page_size = 2;
}

message BaseUUIDResp {
  string id = 1;
  string msg = 2;
}

message TaskLogListResp {
  uint64 total = 1;
  repeated TaskLogInfo data = 2;
}

message TaskLogListReq {
  uint64 page = 1;
  uint64 page_size = 2;
  uint64 task_id = 3;
  uint32 result = 4;
}

message IDReq {
  uint64 id = 1;
}

message UUIDsReq {
  repeated string ids = 1;
}

message TaskListResp {
  uint64 total = 1;
  repeated TaskInfo data = 2;
}

service Job {
  //  group: base
  rpc initDatabase(Empty) returns (BaseResp);
  //  Task management
  //  group: task
  rpc createTask(TaskInfo) returns (BaseIDResp);
  //  group: task
  rpc updateTask(TaskInfo) returns (BaseResp);
  //  group: task
  rpc getTaskList(TaskListReq) returns (TaskListResp);
  //  group: task
  rpc getTaskById(IDReq) returns (TaskInfo);
  //  group: task
  rpc deleteTask(IDsReq) returns (BaseResp);
  //  TaskLog management
  //  group: tasklog
  rpc createTaskLog(TaskLogInfo) returns (BaseIDResp);
  //  group: tasklog
  rpc updateTaskLog(TaskLogInfo) returns (BaseResp);
  //  group: tasklog
  rpc getTaskLogList(TaskLogListReq) returns (TaskLogListResp);
  //  group: tasklog
  rpc getTaskLogById(IDReq) returns (TaskLogInfo);
  //  group: tasklog
  rpc deleteTaskLog(IDsReq) returns (BaseResp);
}

